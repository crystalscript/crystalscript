//
// SIP-013 "semi-fungible token trait" contract
//
// Contract: .sip013-semi-fungible-token-trait

// Example import statement:
//   import "sip013-semi-fungible-token-trait" as sft-trait;
//
// Once imported, use or implement the trait. Eg:
//   implement trait sft-trait.sip013-semi-fungible-token-trait;
//

declare extern {
    trait sip013-semi-fungible-token-trait {
        // Get a token type balance of the passed principal.
        public function get-balance(uint, principal) => response<uint,uint>,

		// Get the total SFT balance of the passed principal.
        public function get-overall-balance(principal) => response<uint,uint>,

		// Get the current total supply of a token type.
        public function get-total-supply(uint) => response<uint,uint>,

		// Get the overall SFT supply.
		public function get-overall-supply() => response<uint,uint>,

		// Get the number of decimal places of a token type.
        public function get-decimals(uint) => response<uint,uint>,

		// Get an optional token URI that represents metadata for a specific token.
        public function get-token-uri(uint) => response<optional string-ascii[256], uint>,
        
		// Transfer from one principal to another.
        public function transfer(uint, uint, principal, principal) => response<bool,uint>,

		// Transfer from one principal to another with a memo.
        public function transfer-memo(uint, uint, principal, principal, buff[34]) => response<bool, uint>
    }
};

