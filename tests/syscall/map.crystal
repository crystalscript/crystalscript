// ==== 'map' syscall using operator, funcs

function a-or-b(char string[1]) {
    if (char == "a") { return "a"; }
    else { return "b"; }
}

function to-zero(byte buff[1]) {
    return 0x0;
}

const list1 = [ u1, u2, u3 ];
const mm = map(+, list1, [u1, u2, u3] );
const mm2 = map(a-or-b, "aca"); // ;; => ["a","b","a"]
const mm3 = map(to-zero, optional(0x01FF));
const str_input = "a\"cc";
const hex_input = 0xFFFEDD;

public function maptest(n uint) {
    return ok(fold(+, mm, n));
}
// TEST: maptest(u0) => ok: val==12

public function maptest2() {
    return ok(mm2[1]);
}
// TEST: maptest2() => ok: val=="b"

public function maptest3() {
    return ok(map(to-zero, hex_input)[0]);
}
// TEST: maptest3() => ok: val==0

public function maptest4() {
    function f(v {a:int}) {
        if (v.a==1) { return 5; }
        else { return 1; }
    }
    return ok(map(f, [{a:1},{a:2},{a:1}])[2]);
}
// TEST: maptest4() => ok: val==5



